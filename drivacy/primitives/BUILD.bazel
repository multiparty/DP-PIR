# Copyright 2020 multiparty.org

load("@rules_cc//cc:defs.bzl", "cc_library", "cc_test")
load("//drivacy:valgrind.bzl", "valgrind_test")

# Secret Sharing Schemes we use in the protocol.
cc_library(
    name = "sharing",
    srcs = [
        "incremental.cc",
        "additive.cc",
    ],
    hdrs = [
        "incremental.h",
        "additive.h",
    ],
    visibility = ["//visibility:public"],
    deps = [
        ":util",
        "//drivacy/types:types",
    ],
)

# Crypto wrapper.
cc_library(
    name = "crypto",
    srcs = [
        "crypto.cc",
    ],
    hdrs = [
        "crypto.h",
    ],
    visibility = ["//visibility:public"],
    deps = [
        "//:libsodium",
        "//drivacy/types:config_cc_proto",
        "//drivacy/types:types",
    ],
)

cc_binary(
    name = "crypto_test_cc",
    srcs = [
        "crypto_test.cc",
    ],
    deps = [
        ":crypto",
        "//drivacy/types:config_cc_proto",
        "//drivacy/types:types",
    ]
)

# Private utility library.
cc_library(
    name = "util",
    srcs = [],
    hdrs = [
        "util.h",
    ],
    visibility = ["//visibility:public"],
)

# Tests
cc_test(
    name = "incremental_test",
    srcs = [
        "incremental_test.cc",
    ],
    deps = [
        ":sharing",
    ],
)
cc_test(
    name = "additive_test",
    srcs = [
        "additive_test.cc",
    ],
    deps = [
        ":sharing",
    ],
)
valgrind_test(
    name = "crypto_test",
    binary = "crypto_test_cc",
)

